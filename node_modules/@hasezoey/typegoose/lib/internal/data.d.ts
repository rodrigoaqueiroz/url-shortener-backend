import { Model, Schema, SchemaDefinition } from 'mongoose';
import { EmptyVoidFn, VirtualOptions } from '../types';
export interface HooksPrePost {
    pre: Map<string | RegExp, (error?: Error) => void>;
    post: Map<string | RegExp, EmptyVoidFn>;
}
export interface PluginMap {
    mongoosePlugin(schema: Schema<any>, options: object): void;
    options: object;
}
/** Schema Map */
export declare const schemas: Map<string, SchemaDefinition>;
/** Models Map */
export declare const models: Map<string, Model<any>>;
/** Virtuals Map */
export declare const virtuals: Map<string, Map<string, VirtualOptions>>;
/** Hooks Map */
export declare const hooks: Map<string, HooksPrePost>;
/** Plugins Map */
export declare const plugins: Map<string, PluginMap[]>;
/** Constructors Map */
export declare const constructors: Map<string, NewableFunction>;
/** Build Schemas */
export declare const buildSchemas: Map<string, Schema>;
